=head1 NAME

rrdmodify - Change the data source structure of an RRD

=head1 SYNOPSIS

B<rrdtool> {B<modify>} S<[-d <address> ]> S<[-s <newstep> ]>
I<in-filename> I<out-filename> 
S<[ B<DEL:>I<ds-name> | B<DS:>I<ds-spec> ... ]>

=head1 DESCRIPTION

The B<modify> function copies an RRD file I<in-filename> to
I<out-filename>, possible removing or adding data sources and
round-robin archives (RRAs) on the fly. When I<in-filename> and
I<out-filename> denote the same file, this is (almost) identical to an
in-place modification.

=over 8

=item S<-d <address> >

If given, B<RRDTool> will try to connect to the caching daemon
L<rrdcached> at I<address> to flush any data not yet written to the
input RRD before reading it in. After writing the final file a FORGET
command is sent to the daemon. This will make the daemon recognize the
updated structure of the underlying RRD file.

=item S<-s <newstep> >

Changes the step size if the RRD to newstep. There are restrictions on
the possible I<newstep> that can be given, namely: The current
stepping of the I<in-filename> must be a multiple of the
I<newstep>. This also means that currently the step size can only be
reduced.

When giving this option, modifications to RRAs will be done AFTER
adapting the step size, so any RRA specifications referring to counts
of PDPs will allready use the new stepping. 

Note that changing the step size does NOT change the number of rows of
any existing RRA by itself: Only the stepsize and assorted other meta
values get changed (namely the PDP count of RRAs and possibly some CDP
information).

For a reduced step size to make sense in practice, it is usually a
good idea to add one or more new RRAs with a step size of 1, because
all existing RRAs will afterwards definitly have a pdp step count of
larger than one, effectively hiding the step smaller size.

=item I<in-filename>

The name of the source B<RRD> file you want to copy/modify.

=item I<out-filename>

The name of the destination B<RRD> file. If it names the same file as
I<in-filename>, the new RRD will effectively relace the old one.

=item B<DEL:>I<ds-name>

Every data source named with a DEL specification will be removed
during the copy operation. The resulting RRD will miss both the
definition and the data for that data source. Multiple DEL
specifications are permitted.

=item B<DS:>I<ds-spec>

For every such data source definition (for the exact syntax see the
create command), a new data source will be added to the output
RRD. Multiple DS specifications are permitted.

=item B<DELRRA:>I<index>

Removes the RRA with index I<index>.

=item B<RRA:>I<rra-spec>

For every such archive definition (for the exact syntax see the
create command), a new RRA will be added to the output
RRD. Multiple RRA specifications are permitted.

=item B<RRA#>I<index>:[+-=]<number>

Adds/removes or sets the given number of rows for the RRA with index
<index>.

=item B<--daemon> I<address>

If given, B<RRDTool> will try to connect to the caching daemon
L<rrdcached> at I<address> and will fail if the connection cannot be
established. If the connection is successfully established the data
for the I<in-filename> will be flushed before performing the
copy/modify operation. Afterwards the I<out-filename> will be
forgotten by the cache daemon, so that the next access using the
caching daemon will read the proper structure.

For a list of accepted formats, see the B<-l> option in the L<rrdcached> manual.

=back

=head1 ENVIRONMENT VARIABLES

The following environment variables may be used to change the behavior of
C<rrdtoolE<nbsp>update>:

=over

=item B<RRDCACHED_ADDRESS>

If this environment variable is set it will have the same effect as specifying
the C<--daemon> option on the command line. If both are present, the command
line argument takes precedence.

=back

=head1 AUTHORS

Tobias Oetiker <tobi@oetiker.ch>,
Peter Stamfest <peter@stamfest.at>

